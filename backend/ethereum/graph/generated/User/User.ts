// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class UserLoginLog extends ethereum.Event {
  get params(): UserLoginLog__Params {
    return new UserLoginLog__Params(this);
  }
}

export class UserLoginLog__Params {
  _event: UserLoginLog;

  constructor(event: UserLoginLog) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isLoggedIn(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get date(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserRegistered extends ethereum.Event {
  get params(): UserRegistered__Params {
    return new UserRegistered__Params(this);
  }
}

export class UserRegistered__Params {
  _event: UserRegistered;

  constructor(event: UserRegistered) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class User extends ethereum.SmartContract {
  static bind(address: Address): User {
    return new User("User", address);
  }

  register(_address: Address): boolean {
    let result = super.call("register", "register(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toBoolean();
  }

  try_register(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("register", "register(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  login(_address: Address): boolean {
    let result = super.call("login", "login(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toBoolean();
  }

  try_login(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("login", "login(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  logout(_address: Address): boolean {
    let result = super.call("logout", "logout(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toBoolean();
  }

  try_logout(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("logout", "logout(address):(bool)", [
      ethereum.Value.fromAddress(_address)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LoginCall extends ethereum.Call {
  get inputs(): LoginCall__Inputs {
    return new LoginCall__Inputs(this);
  }

  get outputs(): LoginCall__Outputs {
    return new LoginCall__Outputs(this);
  }
}

export class LoginCall__Inputs {
  _call: LoginCall;

  constructor(call: LoginCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class LoginCall__Outputs {
  _call: LoginCall;

  constructor(call: LoginCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class LogoutCall extends ethereum.Call {
  get inputs(): LogoutCall__Inputs {
    return new LogoutCall__Inputs(this);
  }

  get outputs(): LogoutCall__Outputs {
    return new LogoutCall__Outputs(this);
  }
}

export class LogoutCall__Inputs {
  _call: LogoutCall;

  constructor(call: LogoutCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class LogoutCall__Outputs {
  _call: LogoutCall;

  constructor(call: LogoutCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
